---
description: 
globs: 
alwaysApply: false
---
# issue-pr-template ルール

## 概要
このルールは、シンプルな指示（例:「テスト用のissueを作成して」「テスト用のPRを作成して」など）で、GitHubのテンプレート（.github/ISSUE_TEMPLATE/ や PULL_REQUEST_TEMPLATE.md）に準拠した自然な英語のissueやpull requestを自動で作成できるようにします。

---

## テンプレートの管理方針
- テンプレート本文は必ずGitHubの .github/ISSUE_TEMPLATE/ や PULL_REQUEST_TEMPLATE.md で一元管理してください。
- rulesファイルにはテンプレート本文を重複して記載しません。
- テンプレートを修正したい場合は、必ずGitHubテンプレートを編集してください。

---

## ルール読了の明示
- このルールを参照した場合、最初に「issue-pr-templateルールを読みました」など、ルールを読んだことを明示的に示してください。

---

## 使い方
- 「テスト用のissueを作成して」「mcpテスト用のPRを作成して」など、目的を簡潔に指示してください。
- 指示内容に応じて、GitHubテンプレートに沿った英語のissue/prを自動生成します。
- 追加で記載したい内容があれば、指示に含めてください。

---

## 実行フロー（自動化される処理）
1. 指示内容をもとに、テンプレートの各項目を自然な英語で自動生成
2. issueまたはPRをGitHubに作成
3. 完了後、URLを返す

---

## 注意事項
- テンプレート本文のマスターは .github/ISSUE_TEMPLATE/ および PULL_REQUEST_TEMPLATE.md です。
- rulesファイルの内容とテンプレート本文に差異が生じた場合、テンプレート本文を優先してください。
- 追加で記載したい内容があれば、指示に含めてください
- テストや検証目的の場合、その旨を明記してください

---

## 例

### 指示例1
> テスト用のissueを作成して
→ GitHubテンプレートに沿った英語のテストissueを自動作成

### 指示例2
> テスト用のPRを作成して
→ GitHubテンプレートに沿った英語のテストPRを自動作成

---

# コード運用ルール：ISSUE・コミット/PR Prefix ガイドライン

## ✅ ISSUEのPrefix

| Prefix       | 用途                                 |
|--------------|--------------------------------------|
| Bug          | バグ報告（不具合の報告）             |
| Feature      | 新機能の提案や要望                   |
| Improvement  | 既存機能の改善（UX/パフォーマンス等）|
| Docs         | ドキュメントの追加・修正             |
| Chore        | 雑務（CI設定、依存更新など）         |
| Question     | 疑問・確認事項                       |

> 🔸 **Improvement と Bug の違い**:  
> Bug は「本来あるべき動作ができていない」場合、  
> Improvement は「正常だけどもっと良くしたい」場合です。

---

## ✅ コミット / PR の Prefix（Conventional Commits 準拠）

| Prefix   | 用途                                           |
|----------|------------------------------------------------|
| feat     | 新機能の追加                                   |
| fix      | バグ修正                                       |
| refactor | リファクタリング（挙動を変えず内部構造改善） |
| docs     | ドキュメントの追加・修正                       |
| test     | テストコードの追加・修正                       |
| chore    | 雑務（CI設定、依存更新、ビルド関連など）       |

> 🔸 **Improvement に対応するPRのprefix は `feat` または `refactor`**  
> - ユーザー影響あり → `feat`  
> - 挙動を変えない構造改善 → `refactor`

---

## IssueとPRを同時に作成する場合の運用

- 「issueとPRを同時に作成して」「issue本文にPRのリンクを載せて」などの指示があった場合、
  1. 先にPRを作成し、そのURLを取得
  2. そのURLをissue本文の任意の位置に記載してissueを作成
- この運用はテンプレート本文の自動編集ではなく、生成時の本文追記として扱います
- 指示時に「issue本文にPRリンクを載せて」と明記すると確実です
